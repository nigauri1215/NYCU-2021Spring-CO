$date
	Wed Apr 21 21:51:04 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var reg 1 ! clk $end
$var reg 1 " rst_n $end
$var integer 32 # count [31:0] $end
$var integer 32 $ fp_w [31:0] $end
$scope module cpu $end
$var wire 2 % ALUOp [1:0] $end
$var wire 1 & ALUSrc $end
$var wire 1 ' RegWrite $end
$var wire 1 ! clk_i $end
$var wire 32 ( imm_4 [31:0] $end
$var wire 32 ) pc_i [31:0] $end
$var wire 32 * pc_o [31:0] $end
$var wire 1 " rst_i $end
$var wire 1 + zero $end
$var wire 1 , overflow $end
$var wire 32 - instr [31:0] $end
$var wire 1 . cout $end
$var wire 32 / RTdata_o [31:0] $end
$var wire 32 0 RSdata_o [31:0] $end
$var wire 32 1 ALUresult [31:0] $end
$var wire 4 2 ALU_control [3:0] $end
$scope module ALU_Ctrl $end
$var wire 2 3 ALUOp [1:0] $end
$var wire 4 4 instr [3:0] $end
$var reg 4 5 ALU_Ctrl_o [3:0] $end
$upscope $end
$scope module Decoder $end
$var wire 2 6 ALUOp [1:0] $end
$var wire 1 & ALUSrc $end
$var wire 1 7 ALUsrc $end
$var wire 1 8 Branch $end
$var wire 1 ' RegWrite $end
$var wire 7 9 opcode [6:0] $end
$var wire 32 : instr_i [31:0] $end
$var wire 3 ; funct3 [2:0] $end
$upscope $end
$scope module IM $end
$var wire 32 < addr_i [31:0] $end
$var wire 32 = instr_o [31:0] $end
$var integer 32 > i [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk_i $end
$var wire 32 ? pc_i [31:0] $end
$var wire 1 " rst_i $end
$var reg 32 @ pc_o [31:0] $end
$upscope $end
$scope module PC_plus_4_Adder $end
$var wire 32 A src1_i [31:0] $end
$var wire 32 B src2_i [31:0] $end
$var wire 32 C sum_o [31:0] $end
$upscope $end
$scope module RF $end
$var wire 5 D RDaddr_i [4:0] $end
$var wire 5 E RSaddr_i [4:0] $end
$var wire 32 F RSdata_o [31:0] $end
$var wire 5 G RTaddr_i [4:0] $end
$var wire 32 H RTdata_o [31:0] $end
$var wire 1 ' RegWrite_i $end
$var wire 1 ! clk_i $end
$var wire 1 " rst_i $end
$var wire 32 I RDdata_i [31:0] $end
$upscope $end
$scope module alu $end
$var wire 4 J ALU_control [3:0] $end
$var wire 1 " rst_n $end
$var wire 32 K src1 [31:0] $end
$var wire 32 L src2 [31:0] $end
$var reg 1 . cout $end
$var reg 1 , overflow $end
$var reg 32 M result [31:0] $end
$var reg 1 + zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 M
bx L
bx K
bx J
b0 I
bx H
bx G
bx F
bx E
bx D
bx C
b100 B
bz A
bx @
bz ?
b100000 >
bx =
bx <
bx ;
bx :
bx 9
08
07
b10 6
bx 5
bx 4
b10 3
bx 2
b0 1
bx 0
bx /
0.
bx -
0,
1+
bx *
bz )
b100 (
0'
z&
b10 %
b10 $
b0 #
0"
0!
$end
#5000
b0 @
b1 #
1!
#10000
0!
1"
#15000
bz @
b10 #
1!
#20000
0!
#25000
b11 #
1!
#30000
0!
#35000
b100 #
1!
#40000
0!
#45000
b101 #
1!
#50000
0!
#55000
b110 #
1!
#60000
0!
#65000
b111 #
1!
#70000
0!
#75000
b1000 #
1!
#80000
0!
#85000
b1001 #
1!
#90000
0!
#95000
b1010 #
1!
#100000
0!
#105000
b1011 #
1!
#110000
0!
#115000
b1100 #
1!
#120000
0!
#125000
b1101 #
1!
#130000
0!
#135000
b1110 #
1!
#140000
0!
#145000
b1111 #
1!
#150000
0!
#155000
b10000 #
1!
#160000
0!
#165000
b10001 #
1!
#170000
0!
#175000
b10010 #
1!
#180000
0!
#185000
b10011 #
1!
#190000
0!
#195000
b10100 #
1!
#200000
0!
#205000
b10101 #
1!
#210000
0!
#215000
b10110 #
1!
#220000
0!
#225000
b10111 #
1!
#230000
0!
#235000
b11000 #
1!
#240000
0!
#245000
b11001 #
1!
#250000
0!
#255000
b11010 #
1!
#260000
0!
#265000
b11011 #
1!
#270000
0!
#275000
b11100 #
1!
#280000
0!
#285000
b11101 #
1!
#290000
0!
#295000
b11110 #
1!
#300000
0!
#305000
b11111 #
1!
#310000
0!
#315000
b100000 #
1!
#320000
0!
#325000
b100001 #
1!
#330000
0!
#335000
b100010 #
1!
#340000
0!
#345000
b100011 #
1!
#350000
0!
#355000
b100100 #
1!
#360000
0!
#365000
b100101 #
1!
#370000
0!
#375000
b100110 #
1!
#380000
0!
#385000
b100111 #
1!
#390000
0!
#395000
b101000 #
1!
#400000
0!
#405000
b101001 #
1!
#410000
0!
#415000
b101010 #
1!
#420000
0!
#425000
b101011 #
1!
#430000
0!
#435000
b101100 #
1!
#440000
0!
#445000
b101101 #
1!
#450000
0!
#455000
b101110 #
1!
#460000
0!
#465000
b101111 #
1!
#470000
0!
#475000
b110000 #
1!
#480000
0!
#485000
b110001 #
1!
#490000
0!
#495000
b110010 #
1!
#500000
0!
#505000
b110011 #
1!
#510000
0!
#515000
b110100 #
1!
#520000
0!
#525000
b110101 #
1!
#530000
0!
#535000
b110110 #
1!
#540000
0!
#545000
b110111 #
1!
#550000
0!
#555000
b111000 #
1!
#560000
0!
#565000
b111001 #
1!
#570000
0!
#575000
b111010 #
1!
#580000
0!
#585000
b111011 #
1!
#590000
0!
#595000
b111100 #
1!
#600000
0!
#605000
b111101 #
1!
#610000
0!
#615000
b111110 #
1!
#620000
0!
#625000
b111111 #
1!
#630000
0!
#635000
b1000000 #
1!
#640000
0!
#645000
b1000001 #
1!
#650000
0!
#655000
b1000010 #
1!
#660000
0!
#665000
b1000011 #
1!
#670000
0!
#675000
b1000100 #
1!
#680000
0!
#685000
b1000101 #
1!
#690000
0!
#695000
b1000110 #
1!
#700000
0!
#705000
b1000111 #
1!
#710000
0!
#715000
b1001000 #
1!
#720000
0!
#725000
b1001001 #
1!
#730000
0!
#735000
b1001010 #
1!
#740000
0!
#745000
b1001011 #
1!
#750000
0!
#755000
b1001100 #
1!
#760000
0!
#765000
b1001101 #
1!
#770000
0!
#775000
b1001110 #
1!
#780000
0!
#785000
b1001111 #
1!
#790000
0!
#795000
b1010000 #
1!
#800000
0!
#805000
b1010001 #
1!
#810000
0!
#815000
b1010010 #
1!
#820000
0!
#825000
b1010011 #
1!
#830000
0!
#835000
b1010100 #
1!
#840000
0!
#845000
b1010101 #
1!
#850000
0!
#855000
b1010110 #
1!
#860000
0!
#865000
b1010111 #
1!
#870000
0!
#875000
b1011000 #
1!
#880000
0!
#885000
b1011001 #
1!
#890000
0!
#895000
b1011010 #
1!
#900000
0!
#905000
b1011011 #
1!
#910000
0!
#915000
b1011100 #
1!
#920000
0!
#925000
b1011101 #
1!
#930000
0!
#935000
b1011110 #
1!
#940000
0!
#945000
b1011111 #
1!
#950000
0!
#955000
b1100000 #
1!
#960000
0!
#965000
b1100001 #
1!
#970000
0!
#975000
b1100010 #
1!
#980000
0!
#985000
b1100011 #
1!
#990000
0!
#995000
b1100100 #
1!
#1000000
0!
#1005000
b1100101 #
1!
#1010000
0!
